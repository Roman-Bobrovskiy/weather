{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import actionsTypes from\"../../redux/weather/weatherActions\";import Modal from\"react-bootstrap/Modal\";import\"bootstrap/dist/css/bootstrap.min.css\";import errors from\"../../utils/errors.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ModalWindow(_ref){var error=_ref.error,hendleChangeError=_ref.hendleChangeError;return/*#__PURE__*/_jsxs(Modal,{size:\"sm\",show:error,onHide:function onHide(){return hendleChangeError(false);},\"aria-labelledby\":\"example-modal-sizes-title-sm\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:\"Error\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:errors.wrongCityName})]});}var mapStateToProps=function mapStateToProps(state){return state.weather;};var mapDispatchToProps={hendleChangeError:actionsTypes.error};export default connect(mapStateToProps,mapDispatchToProps)(ModalWindow);","map":{"version":3,"sources":["/home/rb/React/weather/src/components/Modal/ModalWindow.js"],"names":["React","connect","actionsTypes","Modal","errors","ModalWindow","error","hendleChangeError","wrongCityName","mapStateToProps","state","weather","mapDispatchToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,oCAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAO,sCAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,C,wFAEA,QAASC,CAAAA,WAAT,MAAmD,IAA5BC,CAAAA,KAA4B,MAA5BA,KAA4B,CAArBC,iBAAqB,MAArBA,iBAAqB,CACjD,mBACE,MAAC,KAAD,EACE,IAAI,CAAC,IADP,CAEE,IAAI,CAAED,KAFR,CAGE,MAAM,CAAE,wBAAMC,CAAAA,iBAAiB,CAAC,KAAD,CAAvB,EAHV,CAIE,kBAAgB,8BAJlB,wBAME,KAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,uBACE,KAAC,KAAD,CAAO,KAAP,EAAa,EAAE,CAAC,8BAAhB,mBADF,EANF,cASE,KAAC,KAAD,CAAO,IAAP,WAAaH,MAAM,CAACI,aAApB,EATF,GADF,CAaD,CACD,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAOA,CAAAA,KAAK,CAACC,OAAb,CACD,CAFD,CAIA,GAAIC,CAAAA,kBAAkB,CAAG,CACvBL,iBAAiB,CAAEL,YAAY,CAACI,KADT,CAAzB,CASA,cAAeL,CAAAA,OAAO,CAACQ,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CP,WAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actionsTypes from \"../../redux/weather/weatherActions\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport errors from \"../../utils/errors.json\";\n\nfunction ModalWindow({ error, hendleChangeError }) {\n  return (\n    <Modal\n      size=\"sm\"\n      show={error}\n      onHide={() => hendleChangeError(false)}\n      aria-labelledby=\"example-modal-sizes-title-sm\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-sm\">Error</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{errors.wrongCityName}</Modal.Body>\n    </Modal>\n  );\n}\nlet mapStateToProps = (state) => {\n  return state.weather;\n};\n\nlet mapDispatchToProps = {\n  hendleChangeError: actionsTypes.error,\n};\n\nModalWindow.propTypes = {\n  hendleChangeError: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindow);\n"]},"metadata":{},"sourceType":"module"}