{"ast":null,"code":"var _jsxFileName = \"/home/rb/React/weather/src/components/Modal/ModalWindow.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actionsTypes from \"../../redux/weather/weatherActions\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport errors from \"../../utils/errors.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalWindow(_ref) {\n  let {\n    error,\n    hendleChangeError\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"sm\",\n    show: error,\n    onHide: () => hendleChangeError(false),\n    \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"example-modal-sizes-title-sm\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: errors.wrongCityName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ModalWindow;\n\nlet mapStateToProps = state => {\n  return state.weather;\n};\n\nlet mapDispatchToProps = {\n  hendleChangeError: actionsTypes.error\n};\nModalWindow.propTypes = {\n  hendleChangeError: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindow);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWindow\");","map":{"version":3,"sources":["/home/rb/React/weather/src/components/Modal/ModalWindow.js"],"names":["React","PropTypes","connect","actionsTypes","Modal","errors","ModalWindow","error","hendleChangeError","wrongCityName","mapStateToProps","state","weather","mapDispatchToProps","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,SAASC,WAAT,OAAmD;AAAA,MAA9B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA8B;AACjD,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,IAAI,EAAED,KAFR;AAGE,IAAA,MAAM,EAAE,MAAMC,iBAAiB,CAAC,KAAD,CAHjC;AAIE,uBAAgB,8BAJlB;AAAA,4BAME,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,KAAD,CAAO,IAAP;AAAA,gBAAaH,MAAM,CAACI;AAApB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAdQH,W;;AAeT,IAAII,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAOA,KAAK,CAACC,OAAb;AACD,CAFD;;AAIA,IAAIC,kBAAkB,GAAG;AACvBL,EAAAA,iBAAiB,EAAEL,YAAY,CAACI;AADT,CAAzB;AAIAD,WAAW,CAACQ,SAAZ,GAAwB;AACtBN,EAAAA,iBAAiB,EAAEP,SAAS,CAACc,IAAV,CAAeC,UADZ;AAEtBT,EAAAA,KAAK,EAAEN,SAAS,CAACgB,IAAV,CAAeD;AAFA,CAAxB;AAKA,eAAed,OAAO,CAACQ,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CP,WAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actionsTypes from \"../../redux/weather/weatherActions\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport errors from \"../../utils/errors.json\";\n\nfunction ModalWindow({ error, hendleChangeError }) {\n  return (\n    <Modal\n      size=\"sm\"\n      show={error}\n      onHide={() => hendleChangeError(false)}\n      aria-labelledby=\"example-modal-sizes-title-sm\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-sm\">Error</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{errors.wrongCityName}</Modal.Body>\n    </Modal>\n  );\n}\nlet mapStateToProps = (state) => {\n  return state.weather;\n};\n\nlet mapDispatchToProps = {\n  hendleChangeError: actionsTypes.error,\n};\n\nModalWindow.propTypes = {\n  hendleChangeError: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindow);\n"]},"metadata":{},"sourceType":"module"}