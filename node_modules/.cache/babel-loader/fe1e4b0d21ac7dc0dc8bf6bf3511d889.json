{"ast":null,"code":"import actionsTypes from \"./weatherActionsTypes\";\nimport { combineReducers } from \"redux\";\nimport localStorage from \"../../utils/localStorage\";\nconst initialState = {\n  card: [],\n  cityData: [],\n  error: false,\n  loading: false\n};\n\nlet cityWeatherData = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.card;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case actionsTypes.ADD_CITY:\n      localStorage.add(payload.name);\n      return [...state.filter(obj => obj.name !== payload.name), payload];\n\n    case actionsTypes.REMOVE_CITY:\n      return [...state.filter(stat => stat.name !== payload)];\n\n    case actionsTypes.UPD_WEATHER:\n      let result = state.map(obj => {\n        return obj.name === payload.name ? payload : obj;\n      });\n      return result;\n\n    default:\n      return state;\n  }\n};\n\nlet cityPageData = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.cityData;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case actionsTypes.CITY_PAGE_WEATHER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nlet error = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.error;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case actionsTypes.ERROR:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nlet loading = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.loading;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case actionsTypes.LOADING:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  card: cityWeatherData,\n  cityData: cityPageData,\n  error: error,\n  loading: loading\n});","map":{"version":3,"sources":["/home/rb/React/weather/src/redux/weather/weatherReducer.js"],"names":["actionsTypes","combineReducers","localStorage","initialState","card","cityData","error","loading","cityWeatherData","state","type","payload","ADD_CITY","add","name","filter","obj","REMOVE_CITY","stat","UPD_WEATHER","result","map","cityPageData","CITY_PAGE_WEATHER","ERROR","LOADING"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,IAAIC,eAAe,GAAG,YAAkD;AAAA,MAAjDC,KAAiD,uEAAzCN,YAAY,CAACC,IAA4B;AAAA,MAAtB;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AACtE,UAAQD,IAAR;AACE,SAAKV,YAAY,CAACY,QAAlB;AACEV,MAAAA,YAAY,CAACW,GAAb,CAAiBF,OAAO,CAACG,IAAzB;AAEA,aAAO,CAAC,GAAGL,KAAK,CAACM,MAAN,CAAcC,GAAD,IAASA,GAAG,CAACF,IAAJ,KAAaH,OAAO,CAACG,IAA3C,CAAJ,EAAsDH,OAAtD,CAAP;;AAEF,SAAKX,YAAY,CAACiB,WAAlB;AACE,aAAO,CAAC,GAAGR,KAAK,CAACM,MAAN,CAAcG,IAAD,IAAUA,IAAI,CAACJ,IAAL,KAAcH,OAArC,CAAJ,CAAP;;AAEF,SAAKX,YAAY,CAACmB,WAAlB;AACE,UAAIC,MAAM,GAAGX,KAAK,CAACY,GAAN,CAAWL,GAAD,IAAS;AAC9B,eAAOA,GAAG,CAACF,IAAJ,KAAaH,OAAO,CAACG,IAArB,GAA4BH,OAA5B,GAAsCK,GAA7C;AACD,OAFY,CAAb;AAIA,aAAOI,MAAP;;AAEF;AACE,aAAOX,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,IAAIa,YAAY,GAAG,YAAsD;AAAA,MAArDb,KAAqD,uEAA7CN,YAAY,CAACE,QAAgC;AAAA,MAAtB;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AACvE,UAAQD,IAAR;AACE,SAAKV,YAAY,CAACuB,iBAAlB;AACE,aAAOZ,OAAP;;AAEF;AACE,aAAOF,KAAP;AALJ;AAOD,CARD;;AAUA,IAAIH,KAAK,GAAG,YAAmD;AAAA,MAAlDG,KAAkD,uEAA1CN,YAAY,CAACG,KAA6B;AAAA,MAAtB;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC7D,UAAQD,IAAR;AACE,SAAKV,YAAY,CAACwB,KAAlB;AACE,aAAOb,OAAP;;AACF;AACE,aAAOF,KAAP;AAJJ;AAMD,CAPD;;AASA,IAAIF,OAAO,GAAG,YAAqD;AAAA,MAApDE,KAAoD,uEAA5CN,YAAY,CAACI,OAA+B;AAAA,MAAtB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AACjE,UAAQD,IAAR;AACE,SAAKV,YAAY,CAACyB,OAAlB;AACE,aAAOd,OAAP;;AACF;AACE,aAAOF,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeR,eAAe,CAAC;AAC7BG,EAAAA,IAAI,EAAEI,eADuB;AAE7BH,EAAAA,QAAQ,EAAEiB,YAFmB;AAG7BhB,EAAAA,KAAK,EAAEA,KAHsB;AAI7BC,EAAAA,OAAO,EAAEA;AAJoB,CAAD,CAA9B","sourcesContent":["import actionsTypes from \"./weatherActionsTypes\";\nimport { combineReducers } from \"redux\";\nimport localStorage from \"../../utils/localStorage\";\n\nconst initialState = {\n  card: [],\n  cityData: [],\n  error: false,\n  loading: false,\n};\n\nlet cityWeatherData = (state = initialState.card, { type, payload }) => {\n  switch (type) {\n    case actionsTypes.ADD_CITY:\n      localStorage.add(payload.name);\n\n      return [...state.filter((obj) => obj.name !== payload.name), payload];\n\n    case actionsTypes.REMOVE_CITY:\n      return [...state.filter((stat) => stat.name !== payload)];\n\n    case actionsTypes.UPD_WEATHER:\n      let result = state.map((obj) => {\n        return obj.name === payload.name ? payload : obj;\n      });\n\n      return result;\n\n    default:\n      return state;\n  }\n};\n\nlet cityPageData = (state = initialState.cityData, { type, payload }) => {\n  switch (type) {\n    case actionsTypes.CITY_PAGE_WEATHER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nlet error = (state = initialState.error, { type, payload }) => {\n  switch (type) {\n    case actionsTypes.ERROR:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nlet loading = (state = initialState.loading, { type, payload }) => {\n  switch (type) {\n    case actionsTypes.LOADING:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  card: cityWeatherData,\n  cityData: cityPageData,\n  error: error,\n  loading: loading,\n});\n"]},"metadata":{},"sourceType":"module"}