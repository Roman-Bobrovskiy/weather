{"ast":null,"code":"var timeLastUpdate=function timeLastUpdate(data){var Data=new Date(data*1000);// let Data = new Date();\nvar Year=Data.getFullYear();var Month=Data.getMonth();var Day=Data.getDate();var Hour=Data.getHours();var Minutes=Data.getMinutes();var result=\"\".concat(Year,\".\").concat(Month<10?\"0\"+Month:Month,\".\").concat(Day<10?\"0\"+Day:Day,\" at \").concat(Hour,\":\").concat(Minutes<10?\"0\"+Minutes:Minutes);return result;};var timeWeekDay=function timeWeekDay(data){var days=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];var Data=new Date(data*1000);var Day=Data.getDay();var Hour=Data.getHours();var Minutes=Data.getMinutes();var result=\"\".concat(days[Day],\" \").concat(Hour,\":\").concat(Minutes<10?\"0\"+Minutes:Minutes);return result;};var time=function time(data){var Data=new Date(data*1000);var Hour=Data.getHours();var Minutes=Data.getMinutes();var result=\"\".concat(Hour,\":\").concat(Minutes<10?\"0\"+Minutes:Minutes);return result;};var lengthOfTheDay=function lengthOfTheDay(sunrise,sunset){var different=new Date(sunset)-new Date(sunrise);var Data=new Date(different*1000);var Hour=Data.getHours()-3;var Minutes=Data.getMinutes();var result=\"\".concat(Hour,\":\").concat(Minutes<10?\"0\"+Minutes:Minutes);return result;};var timeCounter={timeLastUpdate:timeLastUpdate,timeWeekDay:timeWeekDay,time:time,lengthOfTheDay:lengthOfTheDay};export default timeCounter;","map":{"version":3,"sources":["/home/rb/React/weather/src/utils/getTime.js"],"names":["timeLastUpdate","data","Data","Date","Year","getFullYear","Month","getMonth","Day","getDate","Hour","getHours","Minutes","getMinutes","result","timeWeekDay","days","getDay","time","lengthOfTheDay","sunrise","sunset","different","timeCounter"],"mappings":"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","sourcesContent":["let timeLastUpdate = (data) => {\n  let Data = new Date(data * 1000);\n  // let Data = new Date();\n  let Year = Data.getFullYear();\n  let Month = Data.getMonth();\n  let Day = Data.getDate();\n  let Hour = Data.getHours();\n  let Minutes = Data.getMinutes();\n\n  let result = `${Year}.${Month < 10 ? \"0\" + Month : Month}.${\n    Day < 10 ? \"0\" + Day : Day\n  } at ${Hour}:${Minutes < 10 ? \"0\" + Minutes : Minutes}`;\n  return result;\n};\n\nlet timeWeekDay = (data) => {\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  let Data = new Date(data * 1000);\n  let Day = Data.getDay();\n  let Hour = Data.getHours();\n  let Minutes = Data.getMinutes();\n  let result = `${days[Day]} ${Hour}:${Minutes < 10 ? \"0\" + Minutes : Minutes}`;\n  return result;\n};\n\nlet time = (data) => {\n  let Data = new Date(data * 1000);\n  let Hour = Data.getHours();\n  let Minutes = Data.getMinutes();\n\n  let result = `${Hour}:${Minutes < 10 ? \"0\" + Minutes : Minutes}`;\n  return result;\n};\n\nlet lengthOfTheDay = (sunrise, sunset) => {\n  let different = new Date(sunset) - new Date(sunrise);\n  let Data = new Date(different * 1000);\n  let Hour = Data.getHours() - 3;\n  let Minutes = Data.getMinutes();\n\n  let result = `${Hour}:${Minutes < 10 ? \"0\" + Minutes : Minutes}`;\n\n  return result;\n};\n\nlet timeCounter = {\n  timeLastUpdate,\n  timeWeekDay,\n  time,\n  lengthOfTheDay,\n};\n\nexport default timeCounter;\n"]},"metadata":{},"sourceType":"module"}